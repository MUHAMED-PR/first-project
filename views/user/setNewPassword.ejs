<%- include('../layouts/header.ejs') %>

<div class="page-wrapper">
    <!-- Header and other common elements -->

    <main class="main d-flex justify-content-center align-items-center">
        <div class="text-center">
            <% if (messages.error) { %>
                <div class="alert text-danger">
                    <%= messages.error %>
                </div>
            <% } %>

            <% if (messages.success) { %>
                <div class="alert text-success">
                    <%= messages.success %>
                </div>
            <% } %>

            <div class="change-password-form text-center">
                <h2>Change Password</h2>
                <p>Please enter your new password below.</p>
                <form action="/changePassword" method="post">
                    <div class="form-group">
                        <input type="password" id="new-password" name="newPassword" class="form-control" placeholder="New Password" required>
                    </div>
                    <div class="form-group">
                        <input type="password" id="confirm-password" name="confirmPassword" class="form-control" placeholder="Confirm Password" required>
                    </div>
                    <button type="submit" class="btn btn-primary btn-block">Change Password</button>
                </form>
            </div><!-- End .change-password-form -->
        </div>
    </main><!-- End .main -->

    <!-- Footer and other common elements -->
</div><!-- End .page-wrapper -->

<style>
    .main {
        min-height: 100vh;
    }

    .change-password-form {
        max-width: 400px;
        margin: auto;
        padding: 20px;
        background-color: #f9f9f9;
        border-radius: 5px;
        box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);
    }

    .change-password-form input[type="password"] {
        width: 100%;
        padding: 10px;
        margin-bottom: 15px;
        border-radius: 5px;
        border: 1px solid #ccc;
    }

    .change-password-form button {
        width: 100%;
        padding: 10px;
        border-radius: 5px;
    }

    .error-message {
        color: rgb(209, 3, 3);
    }

    #password-strength {
        margin-top: 5px;
    }

    .weak {
        color: red;
    }

    .medium {
        color: orange;
    }

    .strong {
        color: green;
    }
</style>

<%- include('../layouts/footer.ejs') %>


<script>
    document.addEventListener('DOMContentLoaded', function() {
        var form = document.querySelector('.change-password-form form');
        var newPassword = document.getElementById('new-password');
        var confirmPassword = document.getElementById('confirm-password');
        var strengthMeter = document.createElement('p');
        strengthMeter.id = 'password-strength';
        newPassword.parentNode.insertBefore(strengthMeter, newPassword.nextSibling);
    
        form.addEventListener('submit', function(event) {
            clearErrorMessages();
    
            var isValid = true;
    
            // Validate new password
            if (newPassword.value.trim() === "") {
                displayErrorMessage('new-password', 'newPasswordError', 'Please enter your new password.');
                isValid = false;
            }
            if (newPassword.value.length < 8) {
                displayErrorMessage('new-password', 'newPasswordError', 'Password must be at least 8 characters long.');
                isValid = false;
            }
    
            // Validate confirm password
            if (confirmPassword.value.trim() === "") {
                displayErrorMessage('confirm-password', 'confirmPasswordError', 'Please confirm your password.');
                isValid = false;
            }
            if (newPassword.value !== confirmPassword.value) {
                displayErrorMessage('confirm-password', 'confirmPasswordError', 'Passwords do not match. Please enter the same password again.');
                isValid = false;
            }
    
            if (!isValid) {
                event.preventDefault();
            }
        });
    
        newPassword.addEventListener('input', checkPasswordStrength);
    
        function displayErrorMessage(inputId, messageId, message) {
            var inputField = document.getElementById(inputId);
            var errorMessage = document.createElement('p');
            errorMessage.textContent = message;
            errorMessage.classList.add('error-message');
            errorMessage.id = messageId;
            inputField.parentNode.insertBefore(errorMessage, inputField.nextSibling);
        }
    
        function clearErrorMessages() {
            var errorMessages = document.querySelectorAll('.error-message');
            errorMessages.forEach(function(errorMessage) {
                errorMessage.parentNode.removeChild(errorMessage);
            });
        }
    
        function checkPasswordStrength() {
            var password = newPassword.value;
            var strength = 0;
    
            // Check length
            if (password.length >= 4) {
                strength++; // The password has at least 4 characters
    
                if (password.length >= 8) {
                    strength++; // The password has at least 8 characters
                }
            }
    
            // Check for uppercase and lowercase letters, numbers, and special characters
            if (/[a-z]/.test(password) && /[A-Z]/.test(password) && /\d/.test(password) && /[@#$%^&*]/.test(password)) {
                strength++;
            }
    
            // Update strength meter
            switch (strength) {
                case 0:
                    strengthMeter.textContent = "";
                    strengthMeter.className = "";
                    break;
                case 1:
                    strengthMeter.textContent = "Weak";
                    strengthMeter.className = "weak";
                    break;
                case 2:
                    strengthMeter.textContent = "Medium";
                    strengthMeter.className = "medium";
                    break;
                case 3:
                    strengthMeter.textContent = "Strong";
                    strengthMeter.className = "strong";
                    break;
                default:
                    strengthMeter.textContent = "";
                    strengthMeter.className = "";
            }
        }
    });
    </script>
    


